# define base image
FROM node:20-slim AS base

WORKDIR /app

ENV NODE_ENV=production

# build prod app
FROM base AS build

# Install curl
RUN apt-get update && apt-get install -y curl

COPY --link package.json pnpm-lock.yaml ./

RUN npm install -g pnpm && \
    pnpm config set auto-install-peers true && \
    pnpm config set shamefully-hoist true && \
    pnpm install --production=false

# Install Sentry CLI with debug statements
RUN echo "Installing Sentry CLI..." && \
    curl -sL https://sentry.io/get-cli/ | sh && \
    echo "Sentry CLI installation completed" && \
    export PATH="$PATH:/root/.local/bin" && \
    echo "PATH is set to: $PATH" && \
    sentry-cli --version

COPY --link . ./

RUN pnpm run build

# Upload sourcemaps to Sentry
ARG SENTRY_AUTH_TOKEN
ARG SENTRY_ORG
ARG SENTRY_PROJECT
ARG SENTRY_RELEASE

ENV SENTRY_LOG_LEVEL=debug
ENV SENTRY_RELEASE=${SENTRY_RELEASE}

RUN echo "Starting Sentry CLI release process" && \
    sentry-cli --version && \
    sentry-cli releases new $SENTRY_RELEASE && \
    sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps ./.output/public/ --rewrite && \
    sentry-cli releases finalize $SENTRY_RELEASE && \
    echo "Sentry release process completed"

# running app
FROM base

ARG SENTRY_RELEASE

COPY --from=build /app/.output ./

# Remove all .map files
RUN find . -name "*.map" -type f -delete

ENV PORT=5000
ENV HOST=0.0.0.0
ENV NUXT_PUBLIC_SENTRY_RELEASE=${SENTRY_RELEASE}
EXPOSE 5000

CMD [ "node", "/app/server/index.mjs" ]
